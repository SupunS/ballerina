/*
 * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License") = 0; you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package io.ballerinalang.compiler.internal.parser;

/**
 * Parser rule contexts that represent each point in the grammar.
 * These represents the current scope during the parsing.
 *
 * @since 1.2.0
 */
public class ParserRuleContext2 {

    // Productions
    public static final int COMP_UNIT = 0;
    public static final int EOF = 1;
    public static final int TOP_LEVEL_NODE = 2;
    public static final int TOP_LEVEL_NODE_WITHOUT_METADATA = 3;
    public static final int TOP_LEVEL_NODE_WITHOUT_MODIFIER = 4;
    public static final int FUNC_DEF = 5;
    public static final int FUNC_DEF_OR_FUNC_TYPE = 6;
    public static final int PARAM_LIST = 7;
    public static final int PARAMETER_START = 8;
    public static final int PARAMETER_WITHOUT_ANNOTS = 9;
    public static final int PARAM_END = 10;
    public static final int REQUIRED_PARAM = 11;
    public static final int DEFAULTABLE_PARAM = 12;
    public static final int REST_PARAM = 13;
    public static final int AFTER_PARAMETER_TYPE = 14;
    public static final int PARAMETER_NAME_RHS = 15;
    public static final int REQUIRED_PARAM_NAME_RHS = 16;
    public static final int FUNC_OPTIONAL_RETURNS = 17;
    public static final int FUNC_BODY = 18;
    public static final int OBJECT_FUNC_BODY = 19;
    public static final int FUNC_BODY_OR_TYPE_DESC_RHS = 20;
    public static final int ANON_FUNC_BODY = 21;
    public static final int FUNC_TYPE_DESC_END = 22;
    public static final int EXTERNAL_FUNC_BODY = 23;
    public static final int EXTERNAL_FUNC_BODY_OPTIONAL_ANNOTS = 24;
    public static final int FUNC_BODY_BLOCK = 25;
    public static final int MODULE_TYPE_DEFINITION = 26;
    public static final int FIELD_OR_REST_DESCIPTOR_RHS = 27;
    public static final int FIELD_DESCRIPTOR_RHS = 28;
    public static final int RECORD_BODY_START = 29;
    public static final int RECORD_BODY_END = 30;
    public static final int RECORD_FIELD = 31;
    public static final int RECORD_FIELD_OR_RECORD_END = 32;
    public static final int RECORD_FIELD_START = 33;
    public static final int RECORD_FIELD_WITHOUT_METADATA = 34;
    public static final int TYPE_DESCRIPTOR = 35;
    public static final int RECORD_TYPE_DESCRIPTOR = 36;
    public static final int TYPE_REFERENCE = 37;
    public static final int ARG_LIST = 38;
    public static final int ARG_START = 39;
    public static final int ARG_LIST_START = 40;
    public static final int ARG_LIST_END = 41;
    public static final int ARG_START_OR_ARG_LIST_END = 42;
    public static final int NAMED_OR_POSITIONAL_ARG_RHS = 43;
    public static final int ARG_END = 44;
    public static final int OBJECT_TYPE_DESCRIPTOR = 45;
    public static final int OBJECT_MEMBER = 46;
    public static final int OBJECT_MEMBER_START = 47;
    public static final int OBJECT_MEMBER_WITHOUT_METADATA = 48;
    public static final int OBJECT_FUNC_OR_FIELD = 49;
    public static final int OBJECT_FUNC_OR_FIELD_WITHOUT_VISIBILITY = 50;
    public static final int OBJECT_METHOD_START = 51;
    public static final int OBJECT_FIELD_RHS = 52;
    public static final int OBJECT_TYPE_QUALIFIER = 53;
    public static final int OBJECT_TYPE_DESCRIPTOR_START = 54;
    public static final int IMPORT_DECL = 55;
    public static final int IMPORT_ORG_OR_MODULE_NAME = 56;
    public static final int IMPORT_MODULE_NAME = 57;
    public static final int IMPORT_VERSION_DECL = 58;
    public static final int VERSION_NUMBER = 59;
    public static final int IMPORT_SUB_VERSION = 60;
    public static final int MAJOR_VERSION = 61;
    public static final int MINOR_VERSION = 62;
    public static final int PATCH_VERSION = 63;
    public static final int IMPORT_PREFIX = 64;
    public static final int IMPORT_PREFIX_DECL = 65;
    public static final int IMPORT_DECL_RHS = 66;
    public static final int AFTER_IMPORT_MODULE_NAME = 67;
    public static final int MAJOR_MINOR_VERSION_END = 68;
    public static final int SERVICE_DECL = 69;
    public static final int OPTIONAL_SERVICE_NAME = 70;
    public static final int LISTENERS_LIST = 71;
    public static final int RESOURCE_DEF = 72;
    public static final int LISTENER_DECL = 73;
    public static final int CONSTANT_DECL = 74;
    public static final int CONST_DECL_TYPE = 75;
    public static final int CONST_DECL_RHS = 76;
    public static final int NIL_TYPE_DESCRIPTOR = 77;
    public static final int OPTIONAL_TYPE_DESCRIPTOR = 78;
    public static final int ARRAY_TYPE_DESCRIPTOR = 79;
    public static final int ARRAY_LENGTH = 80;
    public static final int ANNOT_REFERENCE = 81;
    public static final int ANNOTATIONS = 82;
    public static final int ANNOTATION_END = 83;
    public static final int ANNOTATION_REF_RHS = 84;
    public static final int DOC_STRING = 85;
    public static final int QUALIFIED_IDENTIFIER = 86;
    public static final int EQUAL_OR_RIGHT_ARROW = 87;
    public static final int ANNOTATION_DECL = 88;
    public static final int ANNOT_DECL_OPTIONAL_TYPE = 89;
    public static final int ANNOT_DECL_RHS = 90;
    public static final int ANNOT_OPTIONAL_ATTACH_POINTS = 91;
    public static final int ANNOT_ATTACH_POINTS_LIST = 92;
    public static final int ATTACH_POINT = 93;
    public static final int ATTACH_POINT_IDENT = 94;
    public static final int SINGLE_KEYWORD_ATTACH_POINT_IDENT = 95;
    public static final int IDENT_AFTER_OBJECT_IDENT = 96;
    public static final int XML_NAMESPACE_DECLARATION = 97;
    public static final int XML_NAMESPACE_PREFIX_DECL = 98;
    public static final int DEFAULT_WORKER_INIT = 99;
    public static final int NAMED_WORKERS = 100;
    public static final int WORKER_NAME_RHS = 101;
    public static final int DEFAULT_WORKER = 102;
    public static final int KEY_SPECIFIER = 103;
    public static final int KEY_SPECIFIER_RHS = 104;
    public static final int TABLE_KEY_RHS = 105;
    public static final int LET_EXPR_LET_VAR_DECL = 106;
    public static final int LET_CLAUSE_LET_VAR_DECL = 107;
    public static final int LET_VAR_DECL_START = 108;
    public static final int FUNC_TYPE_DESC = 109;
    public static final int FUNCTION_KEYWORD_RHS = 110;
    public static final int END_OF_TYPE_DESC = 111;
    public static final int INFERRED_TYPE_DESC = 112;
    public static final int SELECT_CLAUSE = 113;
    public static final int WHERE_CLAUSE = 114;
    public static final int FROM_CLAUSE = 115;
    public static final int LET_CLAUSE = 116;
    public static final int MODULE_LEVEL_AMBIGUOUS_FUNC_TYPE_DESC_RHS = 117;
    public static final int EXPLICIT_ANON_FUNC_EXPR_BODY_START = 118;
    public static final int BRACED_EXPR_OR_ANON_FUNC_PARAMS = 119;
    public static final int BRACED_EXPR_OR_ANON_FUNC_PARAM_RHS = 120;
    public static final int ANON_FUNC_PARAM_RHS = 121;
    public static final int IMPLICIT_ANON_FUNC_PARAM = 122;
    public static final int OPTIONAL_PEER_WORKER = 123;
    public static final int WORKER_NAME_OR_METHOD_NAME = 124;
    public static final int PEER_WORKER_NAME = 125;
    public static final int TYPE_DESC_IN_TUPLE_RHS = 126;
    public static final int NIL_OR_PARENTHESISED_TYPE_DESC_RHS = 127;
    public static final int REMOTE_CALL_OR_ASYNC_SEND_RHS = 128;
    public static final int REMOTE_CALL_OR_ASYNC_SEND_END = 129;
    public static final int DEFAULT_WORKER_NAME_IN_ASYNC_SEND = 130;
    public static final int RECEIVE_WORKERS = 131;
    public static final int MULTI_RECEIVE_WORKERS = 132;
    public static final int RECEIVE_FIELD_END = 133;
    public static final int RECEIVE_FIELD = 134;
    public static final int RECEIVE_FIELD_NAME = 135;
    public static final int INFER_PARAM_END_OR_PARENTHESIS_END = 136;
    public static final int LIST_CONSTRUCTOR_MEMBER_END = 137;
    public static final int TYPED_BINDING_PATTERN = 138;
    public static final int BINDING_PATTERN = 139;
    public static final int CAPTURE_BINDING_PATTERN = 140;
    public static final int REST_BINDING_PATTERN = 141;
    public static final int LIST_BINDING_PATTERN = 142;
    public static final int LIST_BINDING_PATTERN_MEMBER = 143;
    public static final int LIST_BINDING_PATTERN_MEMBER_END = 144;
    public static final int FIELD_BINDING_PATTERN = 145;
    public static final int FIELD_BINDING_PATTERN_NAME = 146;
    public static final int MAPPING_BINDING_PATTERN = 147;
    public static final int MAPPING_BINDING_PATTERN_MEMBER = 148;
    public static final int MAPPING_BINDING_PATTERN_END = 149;
    public static final int FIELD_BINDING_PATTERN_END = 150;
    public static final int FUNCTIONAL_BINDING_PATTERN = 151;
    public static final int ARG_BINDING_PATTERN = 152;
    public static final int ARG_BINDING_PATTERN_END = 153;
    public static final int NAMED_ARG_BINDING_PATTERN = 154;
    public static final int BINDING_PATTERN_STARTING_IDENTIFIER = 155;
    public static final int WAIT_KEYWORD_RHS = 156;
    public static final int MULTI_WAIT_FIELDS = 157;
    public static final int WAIT_FIELD_NAME = 158;
    public static final int WAIT_FIELD_NAME_RHS = 159;
    public static final int WAIT_FIELD_END = 160;
    public static final int WAIT_FUTURE_EXPR_END = 161;
    public static final int ALTERNATE_WAIT_EXPRS = 162;
    public static final int ALTERNATE_WAIT_EXPR_LIST_END = 163;
    public static final int DO_CLAUSE = 164;
    public static final int MODULE_ENUM_DECLARATION = 165;
    public static final int MODULE_ENUM_NAME = 166;
    public static final int ENUM_MEMBER_NAME = 167;
    public static final int MEMBER_ACCESS_KEY_EXPR_END = 168;
    public static final int MEMBER_ACCESS_KEY_EXPR = 169;
    public static final int RETRY_KEYWORD_RHS = 170;
    public static final int RETRY_TYPE_PARAM_RHS = 171;
    public static final int RETRY_BODY = 172;
    public static final int ROLLBACK_RHS = 173;
    public static final int STMT_START_BRACKETED_LIST = 174;
    public static final int STMT_START_BRACKETED_LIST_MEMBER = 175;
    public static final int STMT_START_BRACKETED_LIST_RHS = 176;
    public static final int BRACKETED_LIST = 177;
    public static final int BRACKETED_LIST_RHS = 178;
    public static final int BRACKETED_LIST_MEMBER = 179;
    public static final int BRACKETED_LIST_MEMBER_END = 180;
    public static final int LIST_BINDING_MEMBER_OR_ARRAY_LENGTH = 181;
    public static final int TYPED_BINDING_PATTERN_TYPE_RHS = 182;
    public static final int UNION_OR_INTERSECTION_TOKEN = 183;
    public static final int MAPPING_BP_OR_MAPPING_CONSTRUCTOR = 184;
    public static final int MAPPING_BP_OR_MAPPING_CONSTRUCTOR_MEMBER = 185;
    public static final int LIST_BP_OR_LIST_CONSTRUCTOR_MEMBER = 186;
    public static final int VAR_REF_OR_TYPE_REF = 187;
    public static final int FUNC_TYPE_DESC_OR_ANON_FUNC = 188;
    public static final int FUNC_TYPE_DESC_RHS_OR_ANON_FUNC_BODY = 189;
    public static final int STMT_LEVEL_AMBIGUOUS_FUNC_TYPE_DESC_RHS = 190;
    public static final int RECORD_FIELD_NAME_OR_TYPE_NAME = 191;
    public static final int MATCH_BODY = 192;
    public static final int MATCH_PATTERN = 193;
    public static final int MATCH_PATTERN_START = 194;
    public static final int MATCH_PATTERN_END = 195;
    public static final int MATCH_PATTERN_RHS = 196;
    public static final int OPTIONAL_MATCH_GUARD = 197;
    public static final int JOIN_CLAUSE = 198;
    public static final int LIST_MATCH_PATTERN = 199;
    public static final int LIST_MATCH_PATTERNS_START = 200;
    public static final int LIST_MATCH_PATTERN_MEMBER = 201;
    public static final int LIST_MATCH_PATTERN_MEMBER_RHS = 202;
    public static final int REST_MATCH_PATTERN = 203;
    public static final int MAPPING_MATCH_PATTERN = 204;
    public static final int FIELD_MATCH_PATTERNS_START = 205;
    public static final int FIELD_MATCH_PATTERN_MEMBER_RHS = 206;
    public static final int FIELD_MATCH_PATTERN_MEMBER = 207;
    public static final int FUNCTIONAL_MATCH_PATTERN = 208;
    public static final int FUNC_MATCH_PATTERN_OR_CONST_PATTERN = 209;
    public static final int FUNCTIONAL_MATCH_PATTERN_START = 210;
    public static final int NAMED_ARG_MATCH_PATTERN = 211;
    public static final int NAMED_ARG_MATCH_PATTERN_RHS = 212;
    public static final int ARG_LIST_MATCH_PATTERN_START = 213;
    public static final int ARG_MATCH_PATTERN = 214;
    public static final int ARG_MATCH_PATTERN_RHS = 215;
    public static final int ARG_BINDING_PATTERN_START_IDENT = 216;
    public static final int ORDER_BY_CLAUSE = 217;
    public static final int ORDER_KEY = 218;
    public static final int ORDER_KEY_LIST_END = 219;
    public static final int ORDER_DIRECTION_RHS = 220;

    public static final int STATEMENT = 500;
    public static final int STATEMENT_WITHOUT_ANNOTS = 501;
    public static final int ASSIGNMENT_STMT = 502;
    public static final int VAR_DECL_STMT = 503;
    public static final int VAR_DECL_STMT_RHS = 504;
    public static final int TYPE_NAME_OR_VAR_NAME = 505;
    public static final int ASSIGNMENT_OR_VAR_DECL_STMT = 506;
    public static final int ASSIGNMENT_OR_VAR_DECL_STMT_RHS = 507;
    public static final int IF_BLOCK = 508;
    public static final int BLOCK_STMT = 509;
    public static final int ELSE_BLOCK = 510;
    public static final int ELSE_BODY = 511;
    public static final int WHILE_BLOCK = 512;
    public static final int CALL_STMT = 513;
    public static final int CALL_STMT_START = 514;
    public static final int CONTINUE_STATEMENT = 515;
    public static final int BREAK_STATEMENT = 516;
    public static final int PANIC_STMT = 517;
    public static final int RETURN_STMT = 518;
    public static final int RETURN_STMT_RHS = 519;
    public static final int COMPOUND_ASSIGNMENT_STMT = 520;
    public static final int LOCAL_TYPE_DEFINITION_STMT = 521;
    public static final int BINDING_PATTERN_OR_EXPR_RHS = 522;
    public static final int STMT_START_WITH_EXPR_RHS = 523;
    public static final int EXPR_STMT_RHS = 524;
    public static final int EXPRESSION_STATEMENT = 525;
    public static final int EXPRESSION_STATEMENT_START = 526;
    public static final int LOCK_STMT = 527;
    public static final int NAMED_WORKER_DECL = 528;
    public static final int FORK_STMT = 529;
    public static final int FOREACH_STMT = 530;
    public static final int TRANSACTION_STMT = 531;
    public static final int RETRY_STMT = 532;
    public static final int ROLLBACK_STMT = 533;
    public static final int AMBIGUOUS_STMT = 534;
    public static final int MATCH_STMT = 535;

    public static final int RETURNS_KEYWORD = 1000;
    public static final int TYPE_KEYWORD = 1001;
    public static final int PUBLIC_KEYWORD = 1002;
    public static final int PRIVATE_KEYWORD = 1003;
    public static final int REMOTE_KEYWORD = 1004;
    public static final int FUNCTION_KEYWORD = 1005;
    public static final int EXTERNAL_KEYWORD = 1006;
    public static final int RECORD_KEYWORD = 1007;
    public static final int OBJECT_KEYWORD = 1008;
    public static final int ABSTRACT_KEYWORD = 1009;
    public static final int CLIENT_KEYWORD = 1010;
    public static final int IF_KEYWORD = 1011;
    public static final int ELSE_KEYWORD = 1012;
    public static final int WHILE_KEYWORD = 1013;
    public static final int CONTINUE_KEYWORD = 1014;
    public static final int BREAK_KEYWORD = 1015;
    public static final int PANIC_KEYWORD = 1016;
    public static final int IMPORT_KEYWORD = 1017;
    public static final int VERSION_KEYWORD = 1018;
    public static final int AS_KEYWORD = 1019;
    public static final int RETURN_KEYWORD = 1020;
    public static final int SERVICE_KEYWORD = 1021;
    public static final int ON_KEYWORD = 1022;
    public static final int RESOURCE_KEYWORD = 1023;
    public static final int FINAL_KEYWORD = 1024;
    public static final int LISTENER_KEYWORD = 1025;
    public static final int CONST_KEYWORD = 1026;
    public static final int TYPEOF_KEYWORD = 1027;
    public static final int IS_KEYWORD = 1028;
    public static final int MAP_KEYWORD = 1029;
    public static final int FUTURE_KEYWORD = 1030;
    public static final int TYPEDESC_KEYWORD = 1031;
    public static final int NULL_KEYWORD = 1032;
    public static final int LOCK_KEYWORD = 1033;
    public static final int ANNOTATION_KEYWORD = 1034;
    public static final int SOURCE_KEYWORD = 1035;
    public static final int XMLNS_KEYWORD = 1036;
    public static final int WORKER_KEYWORD = 1037;
    public static final int FORK_KEYWORD = 1038;
    public static final int TRAP_KEYWORD = 1039;
    public static final int IN_KEYWORD = 1040;
    public static final int FOREACH_KEYWORD = 1041;
    public static final int TABLE_KEYWORD = 1042;
    public static final int KEY_KEYWORD = 1043;
    public static final int ERROR_KEYWORD = 1044;
    public static final int LET_KEYWORD = 1045;
    public static final int STREAM_KEYWORD = 1046;
    public static final int XML_KEYWORD = 1047;
    public static final int STRING_KEYWORD = 1048;
    public static final int NEW_KEYWORD = 1049;
    public static final int FROM_KEYWORD = 1050;
    public static final int WHERE_KEYWORD = 1051;
    public static final int SELECT_KEYWORD = 1052;
    public static final int START_KEYWORD = 1053;
    public static final int FLUSH_KEYWORD = 1054;
    public static final int DEFAULT_KEYWORD = 1055;
    public static final int WAIT_KEYWORD = 1056;
    public static final int DO_KEYWORD = 1057;
    public static final int TRANSACTION_KEYWORD = 1058;
    public static final int COMMIT_KEYWORD = 1059;
    public static final int RETRY_KEYWORD = 1060;
    public static final int ROLLBACK_KEYWORD = 1061;
    public static final int TRANSACTIONAL_KEYWORD = 1062;
    public static final int ENUM_KEYWORD = 1063;
    public static final int BASE16_KEYWORD = 1064;
    public static final int BASE64_KEYWORD = 1065;
    public static final int READONLY_KEYWORD = 1066;
    public static final int MATCH_KEYWORD = 1067;
    public static final int DISTINCT_KEYWORD = 1068;
    public static final int CONFLICT_KEYWORD = 1069;
    public static final int LIMIT_KEYWORD = 1070;
    public static final int JOIN_KEYWORD = 1071;
    public static final int OUTER_KEYWORD = 1072;
    public static final int VAR_KEYWORD = 1073;
    public static final int FAIL_KEYWORD = 1074;
    public static final int ORDER_KEYWORD = 1075;
    public static final int BY_KEYWORD = 1076;
    public static final int ASCENDING_KEYWORD = 1077;
    public static final int DESCENDING_KEYWORD = 1078;

    public static final int OPEN_PARENTHESIS = 1500;
    public static final int CLOSE_PARENTHESIS = 1501;
    public static final int OPEN_BRACE = 1502;
    public static final int CLOSE_BRACE = 1503;
    public static final int ASSIGN_OP = 1504;
    public static final int SEMICOLON = 1505;
    public static final int COLON = 1506;
    public static final int COMMA = 1507;
    public static final int ELLIPSIS = 1508;
    public static final int QUESTION_MARK = 1509;
    public static final int ASTERISK = 1510;
    public static final int CLOSED_RECORD_BODY_START = 1511;
    public static final int CLOSED_RECORD_BODY_END = 1512;
    public static final int DOT = 1513;
    public static final int OPEN_BRACKET = 1514;
    public static final int CLOSE_BRACKET = 1515;
    public static final int SLASH = 1516;
    public static final int AT = 1517;
    public static final int RIGHT_ARROW = 1518;
    public static final int GT = 1519;
    public static final int LT = 1520;
    public static final int PIPE = 1521;
    public static final int TEMPLATE_START = 1522;
    public static final int TEMPLATE_END = 1523;
    public static final int LT_TOKEN = 1524;
    public static final int GT_TOKEN = 1525;
    public static final int ERROR_TYPE_PARAM_START = 1526;
    public static final int PARENTHESISED_TYPE_DESC_START = 1527;
    public static final int BITWISE_AND_OPERATOR = 1528;
    public static final int EXPR_FUNC_BODY_START = 1529;
    public static final int PLUS_TOKEN = 1530;
    public static final int MINUS_TOKEN = 1531;
    public static final int TUPLE_TYPE_DESC_START = 1532;
    public static final int SYNC_SEND_TOKEN = 1533;
    public static final int LEFT_ARROW_TOKEN = 1534;
    public static final int ANNOT_CHAINING_TOKEN = 1535;
    public static final int OPTIONAL_CHAINING_TOKEN = 1536;
    public static final int DOT_LT_TOKEN = 1537;
    public static final int SLASH_LT_TOKEN = 1538;
    public static final int DOUBLE_SLASH_DOUBLE_ASTERISK_LT_TOKEN = 1539;
    public static final int SLASH_ASTERISK_TOKEN = 1540;
    public static final int RIGHT_DOUBLE_ARROW = 1541;

    public static final int FUNC_NAME = 2000;
    public static final int VARIABLE_NAME = 2001;
    public static final int SIMPLE_TYPE_DESCRIPTOR = 2002;
    public static final int BINARY_OPERATOR = 2003;
    public static final int TYPE_NAME = 2004;
    public static final int BOOLEAN_LITERAL = 2005;
    public static final int CHECKING_KEYWORD = 2006;
    public static final int SERVICE_NAME = 2007;
    public static final int COMPOUND_BINARY_OPERATOR = 2008;
    public static final int UNARY_OPERATOR = 2009;
    public static final int FUNCTION_IDENT = 2010;
    public static final int FIELD_IDENT = 2011;
    public static final int OBJECT_IDENT = 2012;
    public static final int RESOURCE_IDENT = 2013;
    public static final int RECORD_IDENT = 2014;
    public static final int ANNOTATION_TAG = 2015;
    public static final int ATTACH_POINT_END = 2016;
    public static final int IDENTIFIER = 2017;
    public static final int NAMESPACE_PREFIX = 2018;
    public static final int WORKER_NAME = 2019;
    public static final int FIELD_OR_FUNC_NAME = 2020;

    public static final int EXPRESSION = 2500;
    public static final int TERMINAL_EXPRESSION = 2501;
    public static final int EXPRESSION_RHS = 2502;
    public static final int FUNC_CALL = 2503;
    public static final int BASIC_LITERAL = 2504;
    public static final int ACCESS_EXPRESSION = 2505;
    public static final int DECIMAL_INTEGER_LITERAL = 2506;
    public static final int VARIABLE_REF = 2507;
    public static final int STRING_LITERAL = 2508;
    public static final int MAPPING_CONSTRUCTOR = 2509;
    public static final int MAPPING_FIELD = 2510;
    public static final int FIRST_MAPPING_FIELD = 2511;
    public static final int MAPPING_FIELD_NAME = 2512;
    public static final int SPECIFIC_FIELD_RHS = 2513;
    public static final int SPECIFIC_FIELD = 2514;
    public static final int COMPUTED_FIELD_NAME = 2515;
    public static final int MAPPING_FIELD_END = 2516;
    public static final int TYPEOF_EXPRESSION = 2517;
    public static final int UNARY_EXPRESSION = 2518;
    public static final int HEX_INTEGER_LITERAL = 2519;
    public static final int NIL_LITERAL = 2520;
    public static final int CONSTANT_EXPRESSION = 2521;
    public static final int CONSTANT_EXPRESSION_START = 2522;
    public static final int DECIMAL_FLOATING_POINT_LITERAL = 2523;
    public static final int HEX_FLOATING_POINT_LITERAL = 2524;
    public static final int LIST_CONSTRUCTOR = 2525;
    public static final int LIST_CONSTRUCTOR_FIRST_MEMBER = 2526;
    public static final int TYPE_CAST = 2527;
    public static final int TYPE_CAST_PARAM = 2528;
    public static final int TYPE_CAST_PARAM_RHS = 2529;
    public static final int TABLE_CONSTRUCTOR = 2530;
    public static final int TABLE_KEYWORD_RHS = 2531;
    public static final int ROW_LIST_RHS = 2532;
    public static final int TABLE_ROW_END = 2533;
    public static final int NEW_KEYWORD_RHS = 2534;
    public static final int IMPLICIT_NEW = 2535;
    public static final int LET_EXPRESSION = 2536;
    public static final int ANON_FUNC_EXPRESSION = 2537;
    public static final int TABLE_CONSTRUCTOR_OR_QUERY_EXPRESSION = 2538;
    public static final int TABLE_CONSTRUCTOR_OR_QUERY_START = 2539;
    public static final int TABLE_CONSTRUCTOR_OR_QUERY_RHS = 2540;
    public static final int QUERY_EXPRESSION = 2541;
    public static final int QUERY_EXPRESSION_END = 2542;
    public static final int FIELD_ACCESS_IDENTIFIER = 2543;
    public static final int QUERY_PIPELINE_RHS = 2544;
    public static final int LET_CLAUSE_END = 2545;
    public static final int CONDITIONAL_EXPRESSION = 2546;
    public static final int SERVICE_CONSTRUCTOR_EXPRESSION = 2547;
    public static final int XML_NAVIGATE_EXPR = 2548;
    public static final int XML_FILTER_EXPR = 2549;
    public static final int XML_STEP_EXPR = 2550;
    public static final int XML_NAME_PATTERN = 2551;
    public static final int XML_NAME_PATTERN_RHS = 2552;
    public static final int XML_ATOMIC_NAME_PATTERN = 2553;
    public static final int XML_ATOMIC_NAME_PATTERN_START = 2554;
    public static final int XML_ATOMIC_NAME_IDENTIFIER = 2555;
    public static final int XML_ATOMIC_NAME_IDENTIFIER_RHS = 2556;
    public static final int XML_STEP_START = 2557;
    public static final int VARIABLE_REF_RHS = 2558;
    public static final int ORDER_CLAUSE_END = 2559;

    public static final int TYPE_DESC_IN_ANNOTATION_DECL = 3000;
    public static final int TYPE_DESC_BEFORE_IDENTIFIER = 3001;
    public static final int TYPE_DESC_IN_RECORD_FIELD = 3002;
    public static final int TYPE_DESC_IN_PARAM = 3003;
    public static final int TYPE_DESC_IN_TYPE_BINDING_PATTERN = 3004;
    public static final int TYPE_DESC_IN_TYPE_DEF = 3005;
    public static final int TYPE_DESC_IN_ANGLE_BRACKETS = 3006;
    public static final int TYPE_DESC_IN_RETURN_TYPE_DESC = 3007;
    public static final int TYPE_DESC_IN_EXPRESSION = 3008;
    public static final int TYPE_DESC_IN_STREAM_TYPE_DESC = 3009;
    public static final int TYPE_DESC_IN_TUPLE = 3010;
    public static final int TYPE_DESC_IN_PARENTHESIS = 3011;
    public static final int TYPE_DESC_IN_NEW_EXPR = 3012;
    public static final int VAR_DECL_STARTED_WITH_DENTIFIER = 3013;

    public static final int XML_CONTENT = 3200;
    public static final int XML_TAG = 3201;
    public static final int XML_START_OR_EMPTY_TAG = 3202;
    public static final int XML_START_OR_EMPTY_TAG_END = 3203;
    public static final int XML_END_TAG = 3204;
    public static final int XML_NAME = 3205;
    public static final int XML_PI = 3206;
    public static final int XML_TEXT = 3207;
    public static final int XML_ATTRIBUTES = 3208;
    public static final int XML_ATTRIBUTE = 3209;
    public static final int XML_ATTRIBUTE_VALUE_ITEM = 3210;
    public static final int XML_ATTRIBUTE_VALUE_TEXT = 3211;
    public static final int XML_COMMENT_START = 3212;
    public static final int XML_COMMENT_END = 3213;
    public static final int XML_COMMENT_CONTENT = 3214;
    public static final int XML_PI_START = 3215;
    public static final int XML_PI_END = 3216;
    public static final int XML_PI_DATA = 3217;
    public static final int XML_PI_TARGET_RHS = 3218;
    public static final int INTERPOLATION_START_TOKEN = 3219;
    public static final int INTERPOLATION = 3220;
    public static final int TEMPLATE_BODY = 3221;
    public static final int TEMPLATE_MEMBER = 3222;
    public static final int TEMPLATE_STRING = 3223;
    public static final int TEMPLATE_STRING_RHS = 3224;
    public static final int XML_QUOTE_START = 3225;
    public static final int XML_QUOTE_END = 3226;

    public static final int PARAMETERIZED_TYPE = 3400;
    public static final int TYPEDESC_RHS = 3401;
    public static final int ERROR_TYPE_PARAMS = 3402;
    public static final int STREAM_TYPE_FIRST_PARAM_RHS = 3403;
    public static final int KEY_CONSTRAINTS_RHS = 3404;
    public static final int ROW_TYPE_PARAM = 3405;
    public static final int TABLE_TYPE_DESC_RHS = 3406;
    public static final int SIGNED_INT_OR_FLOAT_RHS = 3407;
    public static final int ENUM_MEMBER_LIST = 3408;
    public static final int ENUM_MEMBER_END = 3409;
    public static final int ENUM_MEMBER_RHS = 3410;
    public static final int ENUM_MEMBER_START = 3411;
    public static final int TUPLE_TYPE_DESC_OR_LIST_CONST_MEMBER = 3412;
}
